<root> 
	<scripts>
		<include src="file://{resources}/scripts/custom_game/util.js" />
		<include src="file://{resources}/scripts/custom_game/abilities_charges.js" />
		<include src="file://{resources}/scripts/custom_game/vanilla_keybinds.js" />
		<include src="file://{resources}/scripts/custom_game/imba_invoker_tooltips.js" />
		<include src="file://{resources}/scripts/custom_game/hud_overrides.js" />
	</scripts>

	<script>
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_TIMEOFDAY, false );      //Time of day (clock).
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_HEROES, false );     //Heroes and team score at the top of the HUD.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_PANEL, false );     //Hero actions UI.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_MINIMAP, false );     //Minimap.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PANEL, false );      //Entire Inventory UI
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_SHOP, false );     //Shop portion of the Inventory. 
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_ITEMS, false );      //Player items.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_QUICKBUY, false );     //Quickbuy.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_COURIER, false );      //Courier controls.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PROTECT, false );      //Glyph.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_GOLD, false );     //Gold display.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS, false );      //Suggested items shop panel.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS, false );     //Hero selection Radiant and Dire player lists.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME, false );     //Hero selection game mode name display.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK, false );     //Hero selection clock.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_MENU_BUTTONS, false );     //Top-left menu buttons in the HUD.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND, false );     //Top-left menu buttons in the HUD.

		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD, false );      //Lefthand flyout scoreboard.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ENDGAME, false );      //Endgame scoreboard.    

		GameEvents.Subscribe("CreateIngameErrorMessage", function(data) 
		{
			GameEvents.SendEventClientSide("dota_hud_error_message", 
			{
				"splitscreenplayer": 0,
				"reason": data.reason || 80,
				"message": data.message
			})
		})

		GameEvents.Subscribe("send_effigy_death_message", function(data) 
		{
			GameEvents.SendCustomGameEventToServer("effigy_destroyed", {
				player_name: data["player_name"],
				unit_name: data["unit_name"],
				real_unit_name: $.Localize(data["unit_name"]),
			})
		})

		GameUI.CustomUIConfig().team_colors = {}
		GameUI.CustomUIConfig().team_names = {}

		// Spectator slots
		if (Game.IsInToolsMode())
			GameUI.CustomUIConfig().team_select = {"bShowSpectatorTeam" : true};

		GameUI.CustomUIConfig().team_colors[1] = "grey;";
		if (Game.GetMapInfo().map_display_name.indexOf("imbathrow") != -1) {
			GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "#3dd296;"; // { 61, 210, 150 }	--		Teal
			GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_BADGUYS ] = "#F3C909;"; // { 243, 201, 9 }		--		Yellow
		} else {
			GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "#08640E;"; // Format this later using rgbtohex lib, and taking team color in settings.lua
			GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_BADGUYS] = "#640808;"; // Format this later using rgbtohex lib, and taking team color in settings.lua
		}
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_1] = "#c54da8;"; // { 197, 77, 168 }	--		Pink
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_2] = "#FF6C00;"; // { 255, 108, 0 }		--		Orange
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_3] = "#3455FF;"; // { 52, 85, 255 }		--		Blue
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_4] = "#65d413;"; // { 101, 212, 19 }	--		Green
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_5] = "#815336;"; // { 129, 83, 54 }		--		Brown
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_6] = "#1bc0d8;"; // { 27, 192, 216 }	--		Cyan
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_7] = "#c7e40d;"; // { 199, 228, 13 }	--		Olive
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_CUSTOM_8] = "#8c2af4;"; // { 140, 42, 244 }	--		Purple

		GameUI.CustomUIConfig().team_icons = {}
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "file://{images}/custom_game/team_icons/team_icon_tiger_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_BADGUYS ] = "file://{images}/custom_game/team_icons/team_icon_monkey_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_CUSTOM_1] = "file://{images}/custom_game/team_icons/team_icon_dragon_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_CUSTOM_2] = "file://{images}/custom_game/team_icons/team_icon_dog_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_CUSTOM_3] = "file://{images}/custom_game/team_icons/team_icon_rooster_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_CUSTOM_4] = "file://{images}/custom_game/team_icons/team_icon_ram_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_CUSTOM_5] = "file://{images}/custom_game/team_icons/team_icon_rat_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_CUSTOM_6] = "file://{images}/custom_game/team_icons/team_icon_boar_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_CUSTOM_7] = "file://{images}/custom_game/team_icons/team_icon_snake_01.png";
		GameUI.CustomUIConfig().team_icons[DOTATeam_t.DOTA_TEAM_CUSTOM_8] = "file://{images}/custom_game/team_icons/team_icon_horse_01.png";

		GameUI.CustomUIConfig().team_names[1] = "Spectators";
		GameUI.CustomUIConfig().team_names[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "Radiant";
		GameUI.CustomUIConfig().team_names[DOTATeam_t.DOTA_TEAM_BADGUYS] = "Dire";

/*
		(function () {
			if (Players.GetTeam(Players.GetLocalPlayer()) == 1) {
				$.Msg("Custom UI Manifest: Block spectators.");
				return;
			}
		})();
*/

		//Fix 3 digits levels (up to 4)
		var Parent = $.GetContextPanel().GetParent().GetParent()
		Parent.FindChildTraverse("LevelLabel").style.width = "50px";

		// setup modified vanilla HUD in loading screen
//		if (Game.GetMapInfo().map_display_name == "mutation_5v5" || Game.GetMapInfo().map_display_name == "mutation_10v10")
			SetupLoadingScreen();

		function SetTeamOrderingText(panel, text) {
			if (!panel || Game.GameStateIsAfter(2))
				return;

			if (panel.text.indexOf("...") != -1)
				panel.text = panel.text.slice(0, -3) + ".";
			else
				panel.text = panel.text + ".";

			$.Schedule(1.0, function() {
				SetTeamOrderingText(panel, text);
			})
		}

		// Unit Side Tab visible in mutation mod
		Parent.FindChildTraverse("HeroDisplay").style.zIndex = "1";

		<!-- Vanilla pick screen -->
		var PreGame = $.GetContextPanel().GetParent().GetParent().FindChildTraverse("PreGame")
		var HeroPickScreen = PreGame.FindChildTraverse("HeroPickScreen")

		HeroPickScreen.style.marginTop = "125px"; // 112px

		HidePickScreen();
//		OverrideVersusScreen();

		function HidePickScreen() {
			if (!Game.GameStateIsAfter(2)) {
				PreGame.style.opacity = "0";
				$.Schedule(0.25, HidePickScreen)
			}
			else {
				PreGame.style.opacity = "1";
			}
		}

		function OverrideDotaNeutralItemsShop() {
			var shop_grid_1 = $.GetContextPanel().GetParent().GetParent().GetParent().FindChildTraverse("TeamNeutralTokensList");

			if (!Game.GameStateIsAfter(6)) {
				$.Schedule(1.0, OverrideDotaNeutralItemsShop);
				return;
			}

			for (var i = 0; i <= shop_grid_1.GetChildCount() - 1; i++) {
				var child = shop_grid_1.GetChild(i);

				if (child) {
					for (var j = 0; j <= child.GetChildCount() - 1; j++) {
						var sub_child = child.GetChild(j);

						if (sub_child && sub_child.id && sub_child.id == "TierItemsList") {
							sub_child.style.height = "50px";
							sub_child.style.overflow = "scroll squish";
						}
					}
				}
			}

//			child.style.width = "42px";
//			child.style.height = "width-percentage(72.7%)";
		}

		OverrideDotaNeutralItemsShop();

		function SetupGameInfoPanel() {
			if (Parent.FindChildTraverse("GameInfoPanel")) {
				Parent.FindChildTraverse("GameInfoPanel").style.visibility = "visible";
				Parent.FindChildTraverse("GameInfoPanel").style.backgroundColor = "none";
				Parent.FindChildTraverse("GameInfoPanel").style.width = "100%";
				Parent.FindChildTraverse("GameInfoPanel").style.marginTop = "0px";
				Parent.FindChildTraverse("GameInfoPanel").style.boxShadow = "none";
				Parent.FindChildTraverse("GameInfoPanel").style.transform = "translateX(0%)";
				Parent.FindChildTraverse("GameInfoPanel").GetChild(1).style.visibility = "collapse";
				Parent.FindChildTraverse("GameInfoPanel").GetChild(2).style.visibility = "collapse";
				Parent.FindChildTraverse("GameInfoPanel").hittest = false;
				Parent.FindChildTraverse("GameInfoPanel").hittestchildren = false;

				Parent.FindChildTraverse("GameInfoPanelScrollArea").style.overflow = "squish";
				Parent.FindChildTraverse("GameInfoPanelScrollArea").GetChild(0).style.visibility = "collapse";
				Parent.FindChildTraverse("GameInfoPanelScrollArea").GetChild(2).style.visibility = "collapse";

				Parent.FindChildTraverse("GameInfoPanel").FindChildTraverse("CustomUIContainer").style.height = "100%";
				Parent.FindChildTraverse("GameInfoPanel").FindChildTraverse("CustomUIContainer").style.margin = "2% 2% 2% 2%";
			} else {
				$.Schedule(1.0, SetupGameInfoPanel);
			}
		}

		SetupGameInfoPanel();

		// Dota Plus kill graph
//		if ($.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillCam")) {
//			$.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillgraphButton").style.visibility = "visible";

			// Dota Plus death killgraph code is not working, have to reverse-engineer it
//			$.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillGraph").style.opacity = "0";
//			$.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillGraph").style.visibility = "collapse";
//			$.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillGraph").style.transform = "TranslateX(-1000px)";
//		}
	</script>

	<Panel>
		<!-- CustomUIElements go here.-->
		<!-- <CustomUIElement type="GameInfo" layoutfile="file://{resources}/layout/custom_game/imba_game_info.xml" /> -->
		<CustomUIElement type="GameInfo" layoutfile="file://{resources}/layout/custom_game/vanillafier_tooltips/vanillafier_tooltips.xml" />

		<CustomUIElement type="HeroSelection" layoutfile="file://{resources}/layout/custom_game/multiteam_hero_select_overlay.xml" />
		<CustomUIElement type="HeroSelection" layoutfile="file://{resources}/layout/custom_game/vanilla_hero_selection/vanilla_hero_selection.xml" /> 

		<CustomUIElement type="HudTopBar" layoutfile="file://{resources}/layout/custom_game/multiteam_top_scoreboard.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/barebones_notifications.xml" /> 
		<!-- <CustomUIElement type="CustomGameSetup" layoutfile="file://{resources}/layout/custom_game/team_select.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/demo/hud_hero_demo.xml" />
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/ardm_precache.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/gg/gg.xml" /> 
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/combat_events.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/combat_events_vanilla.xml" />
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/hero_selection.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/selection.xml" />

		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/mutation.xml" /> 
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/precache.xml" /> -->
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/manifold_paradox.xml" /> -->
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/imba_item_builds.xml" /> -->
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/imba_plus_stats.xml" /> -->

		<CustomUIElement type="FlyoutScoreboard" layoutfile="file://{resources}/layout/custom_game/multiteam_flyout_scoreboard.xml" />
		<CustomUIElement type="EndScreen" layoutfile="file://{resources}/layout/custom_game/frostrose_end_screen_v2/dashboard_page_post_game.xml" />

		<!-- Credits: Dota 12v12 (Dota 2 Unofficial dev team) -->
		<!-- <CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/dota_hud_chat_wheel.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/ingame_advertize/ingame_advertize.xml" />
	</Panel>
</root>
