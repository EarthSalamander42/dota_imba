<root> 
	<scripts>
		<include src="file://{resources}/scripts/custom_game/vanilla_keybinds.js" />
		<include src="file://{resources}/scripts/custom_game/imba_invoker_tooltips.js" />
	</scripts>

	<script>
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_TIMEOFDAY, false );      //Time of day (clock).
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_HEROES, false );     //Heroes and team score at the top of the HUD.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_PANEL, false );     //Hero actions UI.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ACTION_MINIMAP, false );     //Minimap.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PANEL, false );      //Entire Inventory UI
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_SHOP, false );     //Shop portion of the Inventory. 
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_ITEMS, false );      //Player items.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_QUICKBUY, false );     //Quickbuy.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_COURIER, false );      //Courier controls.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_PROTECT, false );      //Glyph.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_INVENTORY_GOLD, false );     //Gold display.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_SHOP_SUGGESTEDITEMS, false );      //Suggested items shop panel.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_TEAMS, false );     //Hero selection Radiant and Dire player lists.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_GAME_NAME, false );     //Hero selection game mode name display.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_HERO_SELECTION_CLOCK, false );     //Hero selection clock.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_MENU_BUTTONS, false );     //Top-left menu buttons in the HUD.
		//GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_TOP_BAR_BACKGROUND, false );     //Top-left menu buttons in the HUD.

		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_FLYOUT_SCOREBOARD, false );      //Lefthand flyout scoreboard.
		GameUI.SetDefaultUIEnabled( DotaDefaultUIElement_t.DOTA_DEFAULT_UI_ENDGAME, false );      //Endgame scoreboard.    

		GameEvents.Subscribe("CreateIngameErrorMessage", function(data) 
		{
			GameEvents.SendEventClientSide("dota_hud_error_message", 
			{
				"splitscreenplayer": 0,
				"reason": data.reason || 80,
				"message": data.message
			})
		})

		GameUI.CustomUIConfig().team_colors = {}
		GameUI.CustomUIConfig().team_names = {}

		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "#08640E;"; // Format this later using rgbtohex lib, and taking team color in settings.lua
		GameUI.CustomUIConfig().team_colors[DOTATeam_t.DOTA_TEAM_BADGUYS ] = "#640808;"; // Format this later using rgbtohex lib, and taking team color in settings.lua

		GameUI.CustomUIConfig().team_names[DOTATeam_t.DOTA_TEAM_GOODGUYS] = "Radiant";
		GameUI.CustomUIConfig().team_names[DOTATeam_t.DOTA_TEAM_BADGUYS] = "Dire";

		// fix for battlepass button being in middle of the way of clock time until
		var Parent = $.GetContextPanel().GetParent().GetParent()
		var hudElements = Parent.FindChildTraverse("HUDElements")
		var TimeUntil = hudElements.FindChildTraverse("TimeUntil");
		TimeUntil.style.marginBottom = "0px";

		//Fix 3 digits levels (up to 4)
		var Parent = $.GetContextPanel().GetParent().GetParent()
		Parent.FindChildTraverse("LevelLabel").style.width = "50px";

		// setup modified vanilla HUD in loading screen
//		if (Game.GetMapInfo().map_display_name == "mutation_5v5" || Game.GetMapInfo().map_display_name == "mutation_10v10")
			SetupLoadingScreen()

		function SetupLoadingScreen() {
			if (Parent.FindChildTraverse("GameAndPlayersRoot") == undefined || Parent.FindChildTraverse("TeamsList") == undefined || Parent.FindChildTraverse("TeamsListGroup") == undefined || Parent.FindChildTraverse("CancelAndUnlockButton") == undefined || Parent.FindChildTraverse("UnassignedPlayerPanel") == undefined || Parent.FindChildTraverse("ShuffleTeamAssignmentButton") == undefined)
				$.Schedule(0.25, SetupLoadingScreen);
			else {
				Parent.FindChildTraverse("GameAndPlayersRoot").style.backgroundColor = "rgba(50, 50, 50, 0.2)";
				Parent.FindChildTraverse("GameAndPlayersRoot").style.borderRadius = "3px";
				Parent.FindChildTraverse("GameAndPlayersRoot").style.boxShadow = "black -4px -4px 8px 8px";
				Parent.FindChildTraverse("TeamsList").style.visibility = "collapse";
				Parent.FindChildTraverse("TeamsListGroup").SetParent(Parent.FindChildTraverse("GameAndPlayersRoot"))
				Parent.FindChildTraverse("TeamsListGroup").style.verticalAlign = "top";
				Parent.FindChildTraverse("TeamsListGroup").style.width = "99%";

				if (Game.IsInToolsMode() == false) {
					Parent.FindChildTraverse("UnassignedPlayerPanel").style.visibility = "collapse";
					Parent.FindChildTraverse("CancelAndUnlockButton").style.visibility = "collapse";
					Parent.FindChildTraverse("ShuffleTeamAssignmentButton").style.visibility = "collapse";
				}
			}
		}

		// Unit Side Tab visible in mutation mod
		Parent.FindChildTraverse("HeroDisplay").style.zIndex = "1";

		<!-- Vanilla pick screen -->
		var PreGame = $.GetContextPanel().GetParent().GetParent().FindChildTraverse("PreGame")
		var PregameBG = PreGame.FindChildTraverse("PregameBG")
//		var AmbientFX = PreGame.FindChildTraverse("AmbientFXContainer")
		var HeroPickScreen = PreGame.FindChildTraverse("HeroPickScreen")
		var MainHeroPickScreenContents = PreGame.FindChildTraverse("MainHeroPickScreenContents")
		var HeroPickLeftColumn = PreGame.FindChildTraverse("HeroPickLeftColumn")
		var HeroGrid = PreGame.FindChildTraverse("HeroGrid")
		var GridCore = PreGame.FindChildTraverse("GridCore")
		var PreMinimapContainer = PreGame.FindChildTraverse("PreMinimapContainer")

//		PreGame.style.backgroundColor = "none";
		HeroPickScreen.style.marginTop = "125px"; // 112px
//		Minimap.style.visibility = "collapse";
//		BattlePass.style.visibility = "collapse";
//		GridTeam.style.visibility = "collapse";
//		HeroInspect.style.visibility = "collapse";
//		HeroFilters.style.visibility = "collapse";
//		PregameBG.style.opacity = "0";
		PregameBG.style.transitionDuration = "0.0s";
//		AmbientFX.style.backgroundColor = "#000000fa";

		HidePickScreen();
//		OverrideVersusScreen();

		function HidePickScreen() {
			if (!Game.GameStateIs(3)) {
				PreGame.style.opacity = "0";
				$.Schedule(0.25, HidePickScreen)
			}
			else {
				PreGame.style.opacity = "1";				
			}
		}
/*
		//Buff Bar
		var BuffBar = hudElements.FindChildTraverse("lower_hud").FindChildTraverse("buffs")
		BuffBar.style.width = "30%";
		BuffBar.style.marginLeft = "40.5%";

		//DeBuff Bar
		var DeBuffBar = hudElements.FindChildTraverse("lower_hud").FindChildTraverse("debuffs")
		DeBuffBar.style.width = "30%";
		DeBuffBar.style.marginBottom = "40.5%";
		DeBuffBar.style.marginRight = "29.5%";
		DeBuffBar.style.flowChildren = "right";
*/
		// Enable Hero bio + Disable not-working Dota Plus feature
		if (PreGame.FindChildTraverse("BattlePassHeroUpsell")) {
			PreGame.FindChildTraverse("BattlePassHeroUpsell").style.visibility = "collapse";
			PreGame.FindChildTraverse("FriendsAndFoes").style.height = "205px";
			PreGame.FindChildTraverse("FriendsAndFoes").style.padding = "0px 0px";
			
			if (PreGame && PreGame.FindChildTraverse("BattlePassHeroData"))
				PreGame.FindChildTraverse("BattlePassHeroData").style.visibility = "collapse";
		}

		// Override Versus Screen with IMBA info (Credits: EarthSalamander)
/*
		function OverrideVersusScreen() {
			if (PreGame.FindChildTraverse("VersusScreen2")) {
				var versus_screen = PreGame.FindChildTraverse("VersusScreen2");
				var radiant_team_panel = versus_screen.FindChildTraverse("RadiantScene")
				var dire_team_panel = versus_screen.FindChildTraverse("DireScene")
				var radiant_hero_name = radiant_team_panel.FindChildTraverse("FeaturedHeroName")
				var dire_hero_name = dire_team_panel.FindChildTraverse("FeaturedHeroName")
				var radiant_player = undefined;
				var dire_player = undefined;

				if (Game.GameStateIsBefore(3) || radiant_hero_name == undefined) {
					$.Schedule(0.25, OverrideVersusScreen)
					return;
				}

				for (var i = 0; i < 24; i++) {
					if (Game.GetPlayerInfo(i)) {
//						$.Msg(Game.GetPlayerInfo(i).player_selected_hero + " / " + radiant_hero_name.text)
						if ($.Localize(Game.GetPlayerInfo(i).player_selected_hero).toUpperCase() == radiant_hero_name.text)
							radiant_player = Game.GetPlayerInfo(i);
						if ($.Localize(Game.GetPlayerInfo(i).player_selected_hero).toUpperCase() == dire_hero_name.text)
							dire_player = Game.GetPlayerInfo(i);
						if (radiant_player && dire_player)
							break;
					}
				}

//				$.Msg(radiant_player)
//				$.Msg(dire_player)

				if (radiant_player) {
					var radiant_ply_table = CustomNetTables.GetTableValue("battlepass", radiant_player.player_id);

//					$.Msg(radiant_ply_table)

					if (radiant_ply_table != undefined) {
						radiant_team_panel.FindChildTraverse("FeaturedHeroPlayerBPLevel").style.visibility = "visible";
						radiant_team_panel.FindChildTraverse("BPLevel").style.visibility = "visible";
						radiant_team_panel.FindChildTraverse("BPLevel").style.marginTop = "25px";
						radiant_team_panel.FindChildTraverse("LevelNumber").text = radiant_ply_table.Lvl;

						if (radiant_ply_table.Lvl > 100) {
							radiant_team_panel.FindChildTraverse("LevelNumber").style.color = "#ffffff";
							radiant_team_panel.FindChildTraverse("LevelNumber").style.textShadow = "0px 0px 6px ultraDarkColor";
							radiant_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/max_shield_icon_psd.vtex")';
						} else if (radiant_ply_table.Lvl > 75) {
							radiant_team_panel.FindChildTraverse("LevelNumber").style.color = "#fff3d1";
							radiant_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/gold_shield_icon_psd.vtex")';
						} else if (radiant_ply_table.Lvl > 50) {
							radiant_team_panel.FindChildTraverse("LevelNumber").style.color = "#ffffff";
							radiant_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/silver_shield_icon_psd.vtex")';
						} else if (radiant_ply_table.Lvl > 25) {
							radiant_team_panel.FindChildTraverse("LevelNumber").style.color = "#fff";
							radiant_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/basic_shield_icon_psd.vtex")';
						} else if (radiant_ply_table.Lvl > 0) {
							radiant_team_panel.FindChildTraverse("LevelNumber").style.color = "#fff";
							radiant_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/basic_shield_icon_psd.vtex")';
						}
					}					
				}

				if (dire_player != undefined) {
					var dire_ply_table = CustomNetTables.GetTableValue("battlepass", dire_player.player_id);

//					$.Msg(dire_ply_table)

					if (dire_ply_table) {
						dire_team_panel.FindChildTraverse("FeaturedHeroPlayerBPLevel").style.visibility = "visible";
						dire_team_panel.FindChildTraverse("BPLevel").style.visibility = "visible";
						dire_team_panel.FindChildTraverse("BPLevel").style.marginTop = "25px";
						dire_team_panel.FindChildTraverse("LevelNumber").text = dire_ply_table.Lvl;

						if (dire_ply_table.Lvl > 100) {
							dire_team_panel.FindChildTraverse("LevelNumber").style.color = "#ffffff";
							dire_team_panel.FindChildTraverse("LevelNumber").style.textShadow = "0px 0px 6px ultraDarkColor";
							dire_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/max_shield_icon_psd.vtex")';
						} else if (dire_ply_table.Lvl > 75) {
							dire_team_panel.FindChildTraverse("LevelNumber").style.color = "#fff3d1";
							dire_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/gold_shield_icon_psd.vtex")';
						} else if (dire_ply_table.Lvl > 50) {
							dire_team_panel.FindChildTraverse("LevelNumber").style.color = "#ffffff";
							dire_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/silver_shield_icon_psd.vtex")';
						} else if (dire_ply_table.Lvl > 25) {
							dire_team_panel.FindChildTraverse("LevelNumber").style.color = "#fff";
							dire_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/basic_shield_icon_psd.vtex")';
						} else if (dire_ply_table.Lvl > 0) {
							dire_team_panel.FindChildTraverse("LevelNumber").style.color = "#fff";
							dire_team_panel.FindChildTraverse("ShieldBackground").style.backgroundImage = 'url("s2r://panorama/images/compendium/international2019/basic_shield_icon_psd.vtex")';
						}
					}
				}
			}
		}
*/

		function PlayHeroTaunt() {
			GameEvents.SendCustomGameEventToServer("play_hero_taunt", {
				ID : Players.GetLocalPlayer(),
			});
		}

		GameUI.SetupVanillaKeyBinding("HeroTaunt", PlayHeroTaunt);

		// Dota Plus kill graph
//		if ($.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillCam")) {
//			$.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillgraphButton").style.visibility = "visible";

			// Dota Plus death killgraph code is not working, have to reverse-engineer it
//			$.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillGraph").style.opacity = "0";
//			$.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillGraph").style.visibility = "collapse";
//			$.GetContextPanel().GetParent().GetParent().FindChildTraverse("KillGraph").style.transform = "TranslateX(-1000px)";
//		}
	</script>

	<Panel>
		<!-- CustomUIElements go here.-->
		<CustomUIElement type="GameInfo" layoutfile="file://{resources}/layout/custom_game/imba_game_info.xml" />
		<CustomUIElement type="HeroSelection" layoutfile="file://{resources}/layout/custom_game/multiteam_hero_select_overlay.xml" />
		<CustomUIElement type="HeroSelection" layoutfile="file://{resources}/layout/custom_game/vanilla_hero_selection.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/barebones_notifications.xml" /> 
		<CustomUIElement type="CustomGameSetup" layoutfile="file://{resources}/layout/custom_game/team_select.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/hud_hero_demo.xml" />
<!--	<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/ardm_precache.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/gg.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/combat_events.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/hero_selection.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/selection.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/diretide.xml" />

		<!-- Enable only during diretide -->
<!--	<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/diretide_note.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/roshan_health_bar.xml" /> 
-->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/battlepass.xml" /> 
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/mutation.xml" /> 
<!--	<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/precache.xml" /> -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/overthrow_item_notification.xml" />
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/manifold_paradox.xml" />
<!--	<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/imba_item_builds.xml" /> -->
<!--	<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/imba_plus_stats.xml" /> -->

<!--	<CustomUIElement type="EndScreen" layoutfile="file://{resources}/layout/custom_game/frostrose_end_screen.xml" /> -->
		<CustomUIElement type="EndScreen" layoutfile="file://{resources}/layout/custom_game/frostrose_end_screen_v2/dashboard_page_post_game.xml" />
		<CustomUIElement type="FlyoutScoreboard" layoutfile="file://{resources}/layout/custom_game/multiteam_flyout_scoreboard.xml" />

		<!-- Credits: Dota 12v12 (Dota 2 Unofficial dev team) -->
		<CustomUIElement type="Hud" layoutfile="file://{resources}/layout/custom_game/dota_hud_chat_wheel.xml" />
	</Panel>
</root>
